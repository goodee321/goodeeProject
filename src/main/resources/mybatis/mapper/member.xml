<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.nike.web.mapper.MemberMapper">



	




	<!--  -->
	<select id="selectMemberById" parameterType="String" resultType="MemberDTO">
		SELECT MEMBER_NO, ID, PW, NAME, EMAIL, ADDRESS, ADDR_DETAIL, PHONE, AGREE_STATE, SIGN_IN, PW_MODIFIED, INFO_MODIFIED, SESSION_ID, SESSION_LIMIT
		  FROM MEMBER
		 WHERE ID = #{id}
	</select>


	<!--  -->
	<select id="selectMemberByEmail" parameterType="String" resultType="MemberDTO">
		SELECT MEMBER_NO, ID, PW, NAME, EMAIL, ADDRESS, ADDR_DETAIL, PHONE, AGREE_STATE, SIGN_IN, PW_MODIFIED, INFO_MODIFIED, SESSION_ID, SESSION_LIMIT
		  FROM MEMBER
		 WHERE EMAIL = #{email}
	</select>
	
	
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="MemberDTO">
		INSERT INTO MEMBER
			(ID, PW, NAME, EMAIL, ADDRESS, ADDR_DETAIL, PHONE, AGREE_STATE, SIGN_IN, PW_MODIFIED, INFO_MODIFIED)
		VALUES
			(#{id}, #{pw}, #{name}, #{email}, #{address}, #{addrDetail}, #{phone}, #{agreeState}, NOW(), NOW(), NOW())
	</insert>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteMember" parameterType="Long">
		DELETE
		  FROM MEMBER
		 WHERE MEMBER_NO = #{memberNo}
	</delete>
	
	<!--  -->
	<select id="selectMemberByIdPw" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT MEMBER_NO, ID, PW, NAME, EMAIL, ADDRESS, ADDR_DETAIL, PHONE, AGREE_STATE, SIGN_IN, PW_MODIFIED, INFO_MODIFIED, SESSION_ID, SESSION_LIMIT
		  FROM MEMBER
		 WHERE ID = #{id}
		   AND PW = #{pw}
 	</select>
 	
 	<!-- 로그인 기록 남기기 -->
 	<insert id="insertMemberLog" parameterType="String">
 		INSERT INTO MEMBER_LOG
 			(ID, SIGN_UP)
 		VALUES
 			(#{id}, NOW())
 			
 	</insert>
 	
 	<!-- 탈퇴한 회원 조회 -->
 	<select id="selectSignOutMemberById" parameterType="String" resultType="SignOutMemberDTO">
 		SELECT SIGN_OUT_NO, MEMBER_NO, ID, PW, NAME, EMAIL, ADDRESS, ADDR_DETAIL, PHONE, AGREE_STATE, SIGN_IN, SIGN_OUT_DATE
 		FROM SIGN_OUT_MEMBER
 		WHERE ID = #{id}
 	</select>
 	
 	<!-- 탈퇴한 회원 재가입 -->
	<insert id="reInsertMember" parameterType="MemberDTO">
		INSERT INTO MEMBER
			(MEMBER_NO, ID, PW, NAME, EMAIL, ADDRESS, ADDR_DETAIL, PHONE, AGREE_STATE, SIGN_IN, PW_MODIFIED)
		VALUES
			(#{memberNo}, #{id}, #{pw}, #{name}, #{email}, #{address}, #{addrDetail}, #{phone}, #{agreeState}, NOW(), NOW())
	</insert>
 	
 	<!-- 탈퇴한 회원 명단에서 제거 -->
	<delete id="deleteSignOutMember" parameterType="String">
		DELETE
		  FROM SIGN_OUT_MEMBER
		 WHERE ID = #{id}
	</delete>
 	

 	
 	
 	<!-- Admin -->
 	
 	<!-- 목록(beginRecord - endRecord) Admin -->
	<select id="selectMemberList" parameterType="Map" resultType="MemberDTO">
		 SELECT MEMBER_NO, ID, PW, NAME, EMAIL, ADDRESS, ADDR_DETAIL, PHONE, AGREE_STATE, SIGN_IN, PW_MODIFIED, INFO_MODIFIED, SESSION_ID, SESSION_LIMIT
       	   FROM MEMBER
       LIMIT #{beginRecord}, #{endRecord}
	</select>
	
	
	
	
	
	<!-- 전체 레코드 갯수(Admin) -->
	<select id="selectMemberCount" resultType="Integer">
		SELECT COUNT(MEMBER_NO)
		  FROM MEMBER
	</select>
	
 	
	<!-- 검색된 레코드 갯수 -->
	<select id="selectFindCount" parameterType="Map" resultType="Integer">
		SELECT COUNT(*)
		  FROM MEMBER
	</select>
	
	<!-- 검색 -->
	<select id="selectFindList" parameterType="Map" resultType="MemberDTO">
		SELECT *
		  FROM MEMBER
		  <if test="column=='ID'">
		WHERE ID
		LIKE CONCAT('%', #{query}, '%')
		</if>
		<if test="column=='NAME'">
		WHERE NAME
		LIKE CONCAT('%', #{query}, '%')
		</if>		
		LIMIT #{beginRecord}, #{endRecord} 
	</select>
	
	<!-- 자동완성 -->
	<select id="autoComplete" parameterType="Map" resultType="MemberDTO">
		SELECT DISTINCT ${column}
		  FROM MEMBER
		 WHERE ${column} LIKE #{query} || '%'
	</select>
	
	
	
	<!-- 다중 삭제(선택해서 삭제) Adimin -->
	<!-- DELETE FROM NOTICE WHERE NOTICE_NO IN(1,4) -->
	<delete id="deleteMemberList">
		DELETE
		  FROM MEMBER
		<where> 
		 	<foreach collection="list" item="memberNo" open="MEMBER_NO IN(" separator="," close=")">
				#{memberNo}
			</foreach>
		</where>
	</delete>
	
	
	<!-- 상세보기(Admin) -->
	<select id="selectMemberByNo" parameterType="Long" resultType="MemberDTO">
		SELECT MEMBER_NO, ID, PW, NAME, EMAIL, ADDRESS, ADDR_DETAIL, PHONE, AGREE_STATE, SIGN_IN, PW_MODIFIED, INFO_MODIFIED, SESSION_ID, SESSION_LIMIT
		  FROM MEMBER
		 WHERE MEMBER_NO = #{memberNo}
	</select>
	
	
	<!-- 수정(Admin) -->
	<update id="updateMember" parameterType="MemberDTO">
		UPDATE
		       MEMBER
		   SET
		       NAME = #{name}
		     , EMAIL = #{email}
		     , ADDRESS = #{address}
		     , ADDR_DETAIL = #{addrDetail}
		     , PHONE = #{phone}
		     , INFO_MODIFIED = NOW()
		 WHERE
		   	   MEMBER_NO = #{memberNo}
	</update>
 	
 	
 	
 	<!-- 개별삭제(Admin) -->
	<delete id="deleteMember2" parameterType="Long">
		DELETE
		  FROM MEMBER
		 WHERE MEMBER_NO = #{memberNo}
	</delete>
	
	
	
 	
 	

	
	
	
</mapper>